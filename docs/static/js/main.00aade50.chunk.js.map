{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAkBlD,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,OAOd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAnBoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,Y,uBCRfG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAUH,GAF5C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAInC,OACE,yBAAKc,UAAU,QACb,yBAAKC,IAAMf,EAAMgB,IAAMN,IACtB,+BAAMA,EAAN,OCLMO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECCf,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAuB1C,OAhBAC,qBAAW,WAETxB,EAASC,GACNwB,MAAK,SAAAC,GAEJC,YAAY,WAEVJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAGX,UAEL,CAAEpB,IAEEqB,EDtB0BM,CAAc3B,GAAlCa,EAF4B,EAEjCN,KAAaa,EAFoB,EAEpBA,QAErB,OACE,oCACE,4BAAMpB,GAEJoB,GAAW,sDAEb,yBAAKJ,UAAU,aAETH,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACEkB,IAAMlB,EAAIC,IACLD,UEfRmB,EAAe,WAAM,MAGI3C,mBAAS,CAAC,gBAHd,mBAGzBQ,EAHyB,KAGbT,EAHa,KAUhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEIS,EAAWe,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACE4B,IAAM5B,EACNA,SAAWA,U,MCnBzB8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.00aade50.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue( e.target.value )\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if ( inputValue.trim().length > 2) {\r\n      setCategories(categories => [ inputValue, ...categories ]);\r\n      setinputValue('')\r\n    }\r\n    //console.log('submit Hecho')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange= { handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( category ) => {    \r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=n8iddcQxXffonzZhhmEOeHq1KnVDDVp7`;\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return{\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;  \r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n  //console.log(img)\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={ url } alt={ title } />\r\n       <p> { title } </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => { \r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3>{ category }</h3>\r\n\r\n      { loading && <p>Loading... ðŸ’¨</p> }\r\n      \r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map( img => (\r\n              <GifGridItem\r\n                key={ img.id }\r\n                { ...img }\r\n                //img={ img }\r\n              />\r\n            ))\r\n          }\r\n        \r\n      </div> \r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n//Custom Hooks\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  \r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs( category )\r\n      .then(imgs => {\r\n\r\n        setTimeout( () => {\r\n\r\n          setState({\r\n            data: imgs,\r\n            loading: false\r\n          });\r\n\r\n        },3000);\r\n    })\r\n  }, [ category ])\r\n\r\n  return state;\r\n  \r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n  const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories( [...categories, 'One Piece'] ); //AÃ±adir un nuevo valor al arreglo\r\n  //   //setCategories ( categories => [ ...categories, 'One Piece' ]) segunda forma de agregar un elemento a un arreglo\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr/>\r\n\r\n      <ol>\r\n        { \r\n          categories.map( category => (             \r\n            <GifGrid \r\n              key={ category }\r\n              category={ category }\r\n            />\r\n          //return <li key={ category }>{ category }</li> \r\n          )) // el key es obligatorio, normalmente viene de una base de datos\r\n        } \r\n      </ol>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(  \n  <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}